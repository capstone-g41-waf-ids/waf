user nginx;
worker_processes auto;
pid /var/run/nginx.pid;
load_module modules/ngx_http_geoip_module.so;
load_module modules/ngx_http_modsecurity_module.so;
#load_module modules/ngx_http_uwsgi_module;

error_log  /var/log/nginx/host.error.log;
error_log  /var/log/nginx/host.error.log debug;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    log_format json_output escape=json '{"time_local": "$time_local", '
        '"path": "$request_uri", '
        '"ip": "$remote_addr", '
        '"time": "$time_iso8601", '
        '"user_agent": "$http_user_agent", '
        '"user_id_got": "$uid_got", '
        '"user_id_set": "$uid_set", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referer", '
        '"request_id": "$request_id" }';

    geoip_country /usr/share/GeoIP/GeoIP.dat;
    map $geoip_country_code $allowed_country {
        default yes;
        include /etc/nginx/GEOIP_blacklist;
    }

    access_log  /var/log/nginx/host.access.log  json_output;

    #CONFIGURE RATE LIMITING SETTINGS
    #1mb dedicated storage in memory 'ratelimiter'. rate set to 5 requests per second
    limit_req_zone $binary_remote_addr zone=ratelimiter:1m rate=5r/s;

    upstream webgoat {
        server webgoat:8080;
    }

    #enable modsecurity
    modsecurity on;
    #directs to the mod security rules file
    modsecurity_rules_file /etc/modsecurity.d/setup.conf;

	# Listener for our Web Portal
    server {
        listen 80;
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name localhost;

        ssl_certificate     /etc/nginx/ssl/webgoat.crt;
        ssl_certificate_key /etc/nginx/ssl/webgoat.key;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            uwsgi_pass 172.2.2.4:30;

            uwsgi_connect_timeout 180;
            uwsgi_read_timeout 180;
            uwsgi_send_timeout 180;
            #proxy_pass http://172.2.2.4:30/;
            include /etc/nginx/uwsgi_params;
        }

        modsecurity_transaction_id "localhost-$request_id";

    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://$http_host$request_uri;
    } # doesn't work

    server {
        #listen 8000 ssl http2;
        listen 8000;

        server_name localhost;
        #ssl_certificate /etc/nginx/ssl/webgoat.crt;
        #ssl_certificate_key /etc/nginx/ssl/webgoat.key;
        #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        #ssl_ciphers         HIGH:!aNULL:!MD5;
        #charset koi8-r;

        #assigns transaction id, based on log request id - allows us to correlate between nginx logs and modsecurity logs
        modsecurity_transaction_id "localhost-$request_id";

        #default page
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #FORWARD TO WEBGOAT
        location /WebGoat/ {
            proxy_pass http://webgoat/WebGoat/;
            proxy_redirect off;
            proxy_set_header   Host $http_host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Port 8080;
            proxy_set_header   X-Forwarded-Protocol https;
            #return 301 $scheme://localhost:8000$request_uri;
            include /etc/nginx/blacklist;
            allow all;

            #APPLY RATE LIMITING TO WEBGOAT
            #preset rate limit of 10req/s. traffic throttled after 5reqs, with queue of 10reqs
            limit_req zone=ratelimiter burst=10 delay=5;

            #DENY UNNECESSARY HTTP METHODS
            limit_except GET HEAD POST {
                deny all;
            }
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}