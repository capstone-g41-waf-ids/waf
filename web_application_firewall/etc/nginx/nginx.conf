user nginx;
worker_processes auto;

# SET THE PID FILE
pid /var/run/nginx.pid;

# LOAD MODSECURITY AND GEOIP MODULES
load_module modules/ngx_http_geoip_module.so;
load_module modules/ngx_http_modsecurity_module.so;

# DEFINE THE NAME FOR THE ERROR LOG
error_log  /var/log/nginx/host.error.log;
error_log  /var/log/nginx/host.error.log debug;

# SET THE NUMBER OF WORKER CONNECTIONS
events {
    worker_connections 768;
}

# HTTP BLOCK
http {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;

    # SET LOG FORMAT
    log_format json_output escape=json '{"time_local": "$time_local", '
        '"path": "$request_uri", '
        '"ip": "$remote_addr", '
        '"time": "$time_iso8601", '
        '"user_agent": "$http_user_agent", '
        '"user_id_got": "$uid_got", '
        '"user_id_set": "$uid_set", '
        '"remote_user": "$remote_user", '
        '"request": "$request", '
        '"status": "$status", '
        '"body_bytes_sent": "$body_bytes_sent", '
        '"request_time": "$request_time", '
        '"http_referrer": "$http_referer", '
        '"request_id": "$request_id", '
         '"request_body": "$request_body", '
         '"geoip_country_code": "$geoip_country_code", '
         '"server_addr": "$server_addr", '
         '"server_port": "$server_port" }';

    # CONFIGURE GEOIP BLOCKING
    geoip_country /usr/share/GeoIP/GeoIP.dat;
    map $geoip_country_code $allowed_country {
        default yes;
        include /etc/nginx/geoblacklist;  # Geoblacklist file modified by user through web portal
    }

    # CONFIGUR ACCESS LOGS LOCATION
    # Set json output format
    access_log  /var/log/nginx/host.access.log  json_output;

    #CONFIGURE RATE LIMITING SETTINGS
    #1mb dedicated storage in memory 'ratelimiter'. rate set to 5 requests per second
    limit_req_zone $binary_remote_addr zone=ratelimiter:1m rate=5r/s;

    # Define the SSL Certs
    ssl_certificate /etc/nginx/ssl/secret.crt;
    ssl_certificate_key /etc/nginx/ssl/secret.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Configure upstream for the protected webserver
    upstream webserver {
        server webserver:8080;
    }

    # Configure upstream for the webportal
    upstream webportal {
        server unix:///tmp/uwsgi.sock;
    }

    # ENABLE MODSECURITY
    modsecurity on;
    # Directs to the mod security rules file
    modsecurity_rules_file /etc/modsecurity.d/setup.conf;

	# Listener for our Web Portal
    server {
        # Webportal listens on port 40
        listen 40 ssl http2;
        listen [::]:40 ssl http2;

        server_name localhost;

        location / {
            uwsgi_pass webportal;
            uwsgi_intercept_errors on;
            include /etc/nginx/uwsgi_params;

            include /etc/nginx/security.conf; # INCLUDE ALL PREDEFINED SECURITY CONFIGURATIONS
        }

        modsecurity_transaction_id "$request_id"; # SET SHARED TRANSACTION ID TO LINK MODSEC + NGINX LOGS

        include /etc/nginx/errors.conf; # INCLUDE CUSTOM ERROR PAGES
    }

    ###
    ### CUSTOMISE THESE DETAILS TO MATCH YOUR OWN WEB SERVER
    ###
    server {
        listen 8000 ssl http2;
        listen [::]:8000 ssl http2;

        server_name localhost;

        modsecurity_transaction_id "$request_id";  # SET SHARED TRANSACTION ID TO LINK MODSEC + NGINX LOGS

        #default page
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;

            include /etc/nginx/security.conf; # INCLUDE ALL PREDEFINED SECURITY CONFIGURATIONS
        }

        #FORWARD TO WEBGOAT
        location /WebGoat/ {

            proxy_pass http://webserver/WebGoat/;

            include /etc/nginx/security.conf; # INCLUDE ALL PREDEFINED SECURITY CONFIGURATIONS
        }

        include /etc/nginx/errors.conf; # INCLUDE CUSTOM ERROR PAGES
    }
}